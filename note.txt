<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <style>
        * {
            padding: 0;
            margin: 0;
            box-sizing: border-box;
        }

        /* setup */
        html,
        body,
        .holster {
            height: 100%;
        }

        .holster {
            display: flex;
            align-items: center;
            justify-content: space-between;
            flex-flow: column nowrap;
            font-family: monospace;
        }

        .container {
            display: flex;
            overflow: auto;
            outline: 1px dashed lightgray;
            flex: none;
        }

        .container.x {
            width: 100%;
            flex-flow: row nowrap;
        }

        .container.y {
            width: 256px;
            height: 256px;
            flex-flow: column nowrap;
        }

        .container>div {
            text-align: center;
            flex: none;
        }

        .container>div:last-child {
            margin-right: 50%;
        }

        .x.container>div {
            line-height: 128px;
            font-size: 64px;
            height: 128px;
        }

        .y.container>div {
            line-height: 256px;
            font-size: 128px;
            height: 100%;
        }

        /* appearance fixes */
        .y.container>div:first-child {
            line-height: 1.3;
            font-size: 64px;
        }

        /* coloration */
        .container>div:nth-child(even) {
            background-color: #87EA87;
        }

        .container>div:nth-child(odd) {
            background-color: #87CCEA;
        }
    </style>
</head>

<body>
    <div style="position: fixed; top: 0; left: 50%; background-color: red; width: 1px; height: 100px;"></div>
    <div class="holster">
        <div class="container x mandatory-scroll-snapping" dir="ltr">
            <div style="width: 50%;"></div>
            <div style="width: 10%;"></div>
            <div style="width: 10%;"></div>
            <div style="width: 10%;"></div>
            <div style="width: 10%;"></div>
            <div style="width: 10%;"></div>
            <div style="width: 10%;"></div>
            <div style="width: 10%;"></div>
            <div style="width: 10%;"></div>
            <div style="width: 10%;"></div>
            <div style="width: 10%;"></div>
            <div style="width: 10%;"></div>
            <div style="width: 10%;"></div>
            <div style="width: 10%;"></div>
            <div style="width: 10%;"></div>
            <div style="width: 10%;"></div>
            <div style="width: 10%;"></div>
            <div style="width: 10%;"></div>
            <div style="width: 10%;"></div>
            <div style="width: 10%;"></div>
            <div style="width: 10%;"></div>
            <div style="width: 10%;"></div>
            <div style="width: 10%;"></div>
            <div style="width: 10%;"></div>
            <div style="width: 10%;"></div>
            <div style="width: 10%;"></div>
            <div style="width: 10%;"></div>
            <div style="width: 10%;"></div>
            <div style="width: 10%;"></div>
            <div style="width: 10%;"></div>
            <div style="width: 10%;"></div>
            <div style="width: 10%;"></div>
            <div style="width: 10%;"></div>
            <div style="width: 10%;"></div>
            <div style="width: 10%;"></div>
            <div style="width: 10%;"></div>
        </div>
    </div>

    <script>
        const slider = document.querySelector('.container');
        let mouseDown = false;
        let startX, scrollLeft;
        const middlePoint = document.body.getBoundingClientRect().width / 2;
        const children = document.querySelectorAll('.container div');

        let startDragging = function (e) {
            mouseDown = true;
            startX = e.pageX - slider.offsetLeft;
            scrollLeft = slider.scrollLeft;
            slider.style.scrollBehavior = "unset";
        };

        let stopDragging = function (event) {
            mouseDown = false;
            slider.style.scrollBehavior = "smooth";

            let allChildrenPos = [];
            children.forEach((c, i) => {
                const cDetail = c.getBoundingClientRect();
                allChildrenPos.push({ index: i, value: cDetail.right, width: cDetail.width });
            })
            const pointToSnap = allChildrenPos.reduce((prev, curr) => {
                return Math.abs(curr.value - middlePoint) < Math.abs(prev.value - middlePoint) ? curr : prev;
            })
            slider.scrollLeft = pointToSnap.index * children[1].getBoundingClientRect().width;
        };

        slider.addEventListener('mousemove', (e) => {
            e.preventDefault();
            if (!mouseDown) { return; }
            const x = e.pageX - slider.offsetLeft;
            const scroll = x - startX;
            slider.scrollLeft = scrollLeft - scroll;
        });

        // Add the event listeners
        slider.addEventListener('mousedown', startDragging, false);
        slider.addEventListener('mouseup', stopDragging, false);
        // slider.addEventListener('mouseleave', stopDragging, false);
    </script>
</body>

</html>